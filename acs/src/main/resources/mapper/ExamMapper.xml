<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sw.acs.mapper.ExamMapper">
    <select id="selectExamList" resultType="com.sw.acs.domain.Exam">
        select e.exam_id, e.exam_name, e.creator_id, u.nick_name as creator_name, e.time, e.create_date,  e.update_date,
               e.topic_num, e.total_score, e.pass_mark, e.permit_copy, e.disrupt_order,e.repeat_test, e.auto_mack
        from t_exam e
        left join t_user u on creator_id = user_id
        where e.exam_id != 0
        <if test="examName != null and examName != ''">
            AND e.exam_name like concat('%', #{examName}, '%')
        </if>
        <if test="creatorName != null and creatorName != ''">
            AND u.nick_name like concat('%', #{creatorName}, '%')
        </if>
    </select>

    <select id="selectExamById" resultType="com.sw.acs.domain.Exam">
        select e.exam_id, e.exam_name, e.creator_id, u.nick_name as creator_name, e.time, e.create_date,  e.update_date,
               e.topic_num, e.total_score, e.pass_mark, e.permit_copy, e.disrupt_order,e.repeat_test, e.auto_mack
        from t_exam e
        left join t_user u on creator_id = user_id
        where e.exam_id = #{examId}
    </select>

    <select id="selectClassesExam" resultType="com.sw.acs.domain.Exam">
        select e.exam_id, e.exam_name, e.creator_id, u.nick_name as creator_name, e.time, e.create_date,  e.update_date, ec.start_date,
               ec.deadline, e.topic_num, e.total_score, e.pass_mark, e.permit_copy, e.disrupt_order, ec.publish_answer, ec.publish_score ,e.repeat_test, e.auto_mack
        from t_exam e
        left join t_user u on creator_id = user_id
        left join exam_classes ec on e.exam_id = ec.exam_id
        where e.exam_id = #{examId} and ec.classes_id = #{classesId}
    </select>

    <insert id="insertExam" parameterType="com.sw.acs.domain.Exam" useGeneratedKeys="true" keyProperty="examId">
        insert into t_exam(exam_name, creator_id, time, create_date, update_date, topic_num, total_score, pass_mark, permit_copy, disrupt_order, repeat_test, auto_mack)
        values(#{examName}, #{creatorId}, #{time}, #{createDate}, #{updateDate}, #{topicNum}, #{totalScore}, #{passMark}, #{permitCopy}, #{disruptOrder}, #{repeatTest}, #{autoMack})
    </insert>

    <delete id="deleteExam">
        delete from t_exam where exam_id = #{examId}
    </delete>

    <update id="update" parameterType="com.sw.acs.domain.Exam">
        update t_exam
        <set>
            <if test="examName != null">
                exam_name = #{examName},
            </if>
            <if test="creatorId != null">
                creator_id = #{creatorId,},
            </if>
            <if test="time != null">
                `time` = #{time},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
            <if test="topicNum != null">
                topic_num = #{topicNum},
            </if>
            <if test="totalScore != null">
                total_score = #{totalScore},
            </if>
            <if test="passMark != null">
                pass_mark = #{passMark},
            </if>
            <if test="permitCopy != null">
                permit_copy = #{permitCopy},
            </if>
            <if test="disruptOrder != null">
                disrupt_order = #{disruptOrder},
            </if>
            <if test="repeatTest != null">
                repeat_test = #{repeatTest},
            </if>
            <if test="autoMack != null">
                auto_mack = #{autoMack},
            </if>
        </set>
        where exam_id = #{examId}
    </update>
</mapper>